/*
 * GPIO_Driver_stm32f103c6.c
 *
 *  Created on: Oct 2, 2023
 *      Author: Ibrahim Abo Elhassan
 */


#include "GPIO_Driver_stm32f103c6.h"


uint8_t GETCRLHPosition (uint16_t)
{

}
/**================================================================
* @Fn           - MCAL_GPIO_Init
* @brief        - Initialize the GPIOx Piny according to specified parameter in Pinconfig.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - PinConfig pointer to GPIO_PinConfig_t structure that contain the configuration information for specific Pin.
* @retval       - None
* Note          - None
*/
void MCAL_GPIO_Init (GPIO_REG_typedef * GPIOx , GPIO_PinConfig_t *PinConfig)
{
	//Port configuration register low (GPIOx_CRL) from 0 --> 7
	//Port configuration register high (GPIOx_CRH) from 8 --> 15

	volatile uint32_t* ConfigRegister = NULL;
	ConfigRegister = (PinConfig->GPIO_PinNumber < GPIO_PIN_8 ? &GPIOx->CRL : &GPIOx->CRH);
}


/**================================================================
* @Fn           - MCAL_GPIO_DeInit
* @brief        - Reset all GPIOx register.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @retval       - None
* Note          - None
*/
void MCAL_GPIO_DeInit (GPIO_REG_typedef * GPIOx)
{

}


/**================================================================
* @Fn           - MCAL_GPIO_ReadPin
* @brief        - Read specific pin.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - PinNumber: Set PinNumber according to @ref GPIO_PINS_define.
* @retval       - The input pin value (Two values based on @ref GPIO_Pin_State).
* Note          - None
*/
uint8_t MCAL_GPIO_ReadPin (GPIO_REG_typedef * GPIOx , uint16_t PinNumber)
{

}


/**================================================================
* @Fn           - MCAL_GPIO_ReadPort
* @brief        - Read specific port value.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @retval       - The input port value
* Note          - None
*/
uint16_t MCAL_GPIO_ReadPort (GPIO_REG_typedef * GPIOx)
{

}



/**================================================================
* @Fn           - MCAL_GPIO_WritePin
* @brief        - Write value on specific input pin.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - PinNumber: Set PinNumber according to @ref GPIO_PINS_define.
* @param [in]   - Value: Pin Value
* @retval       - None
* Note          - None
*/
void MCAL_GPIO_WritePin (GPIO_REG_typedef * GPIOx , uint16_t PinNumber , uint8_t Value)
{

}


/**================================================================
* @Fn           - MCAL_GPIO_WritePort
* @brief        - Write value on specific port.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - Value: Pin Value
* @retval       - None
* Note          - None
*/
void MCAL_GPIO_WritePort (GPIO_REG_typedef * GPIOx , uint16_t Value)
{

}


/**================================================================
* @Fn           - MCAL_GPIO_TogglePin.
* @brief        - Toggle specific pin.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - PinNumber: Set PinNumber according to @ref GPIO_PINS_define.MCAL_GPIO_TogglePin
* @retval       - None
* Note          - None
*/
void MCAL_GPIO_TogglePin (GPIO_REG_typedef * GPIOx , uint16_t PinNumber)
{

}



/**================================================================
* @Fn           - MCAL_GPIO_LockPin.
* @brief        - Lock specific pin that make its configuration be frozen.
* @param [in]   - GPIOx: where x can be (A:E depending on device used) to select GPIO peripherals.
* @param [in]   - PinNumber: Set PinNumber according to @ref GPIO_PINS_define.MCAL_GPIO_TogglePin
* @retval       - OK in case config is locked, ERROR in case config NOT locked based on @ref GPIO_Lock_Status.
* Note          - None
*/
uint8_t MCAL_GPIO_LockPin (GPIO_REG_typedef * GPIOx , uint16_t PinNumber)
{

}
