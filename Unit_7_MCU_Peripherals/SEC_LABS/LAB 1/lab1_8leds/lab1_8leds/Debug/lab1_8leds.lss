
lab1_8leds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000102  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000156  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000156  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000188  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006c3  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a5  00000000  00000000  000008a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000028b  00000000  00000000  00000e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000010d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000325  00000000  00000000  000010fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000120  00000000  00000000  00001421  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001541  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "Utils.h"

int main(void)
{
	// Set all PORTA pins as outputs
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	{
		//Turn ON all LEDs one by one
		for (int count = 0; count < 8; count++)
		{
			
			SetBit(PORTA,count);
  70:	61 e0       	ldi	r22, 0x01	; 1
  72:	70 e0       	ldi	r23, 0x00	; 0
	DDRA = 0xFF;
	
	while (1)
	{
		//Turn ON all LEDs one by one
		for (int count = 0; count < 8; count++)
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
		{
			
			SetBit(PORTA,count);
  78:	4b b3       	in	r20, 0x1b	; 27
  7a:	9b 01       	movw	r18, r22
  7c:	08 2e       	mov	r0, r24
  7e:	02 c0       	rjmp	.+4      	; 0x84 <main+0x18>
  80:	22 0f       	add	r18, r18
  82:	33 1f       	adc	r19, r19
  84:	0a 94       	dec	r0
  86:	e2 f7       	brpl	.-8      	; 0x80 <main+0x14>
  88:	24 2b       	or	r18, r20
  8a:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	30 e7       	ldi	r19, 0x70	; 112
  90:	42 e0       	ldi	r20, 0x02	; 2
  92:	21 50       	subi	r18, 0x01	; 1
  94:	30 40       	sbci	r19, 0x00	; 0
  96:	40 40       	sbci	r20, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x26>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x30>
  9c:	00 00       	nop
	DDRA = 0xFF;
	
	while (1)
	{
		//Turn ON all LEDs one by one
		for (int count = 0; count < 8; count++)
  9e:	01 96       	adiw	r24, 0x01	; 1
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	91 05       	cpc	r25, r1
  a4:	49 f7       	brne	.-46     	; 0x78 <main+0xc>
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	94 e3       	ldi	r25, 0x34	; 52
  aa:	2c e0       	ldi	r18, 0x0C	; 12
  ac:	81 50       	subi	r24, 0x01	; 1
  ae:	90 40       	sbci	r25, 0x00	; 0
  b0:	20 40       	sbci	r18, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x40>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
		}
		
		_delay_ms(500);
		
		//Turn OFF all LEDs one by one reversely
		for (int count = 7; count >= 0; count--)
  b8:	87 e0       	ldi	r24, 0x07	; 7
  ba:	90 e0       	ldi	r25, 0x00	; 0
		{
			
			ClearBit(PORTA,count);
  bc:	3b b3       	in	r19, 0x1b	; 27
  be:	ab 01       	movw	r20, r22
  c0:	08 2e       	mov	r0, r24
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <main+0x5c>
  c4:	44 0f       	add	r20, r20
  c6:	55 1f       	adc	r21, r21
  c8:	0a 94       	dec	r0
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <main+0x58>
  cc:	24 2f       	mov	r18, r20
  ce:	20 95       	com	r18
  d0:	23 23       	and	r18, r19
  d2:	2b bb       	out	0x1b, r18	; 27
  d4:	3f ef       	ldi	r19, 0xFF	; 255
  d6:	40 e7       	ldi	r20, 0x70	; 112
  d8:	22 e0       	ldi	r18, 0x02	; 2
  da:	31 50       	subi	r19, 0x01	; 1
  dc:	40 40       	sbci	r20, 0x00	; 0
  de:	20 40       	sbci	r18, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x6e>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x78>
  e4:	00 00       	nop
		}
		
		_delay_ms(500);
		
		//Turn OFF all LEDs one by one reversely
		for (int count = 7; count >= 0; count--)
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	48 f7       	brcc	.-46     	; 0xbc <main+0x50>
  ea:	4f ef       	ldi	r20, 0xFF	; 255
  ec:	84 e3       	ldi	r24, 0x34	; 52
  ee:	9c e0       	ldi	r25, 0x0C	; 12
  f0:	41 50       	subi	r20, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x84>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x8e>
  fa:	00 00       	nop
  fc:	bb cf       	rjmp	.-138    	; 0x74 <main+0x8>

000000fe <_exit>:
  fe:	f8 94       	cli

00000100 <__stop_program>:
 100:	ff cf       	rjmp	.-2      	; 0x100 <__stop_program>
